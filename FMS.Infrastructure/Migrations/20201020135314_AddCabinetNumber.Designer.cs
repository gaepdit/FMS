// <auto-generated />
using System;
using FMS.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FMS.Infrastructure.Migrations
{
    [DbContext(typeof(FmsDbContext))]
    [Migration("20201020135314_AddCabinetNumber")]
    partial class AddCabinetNumber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FMS.Domain.Dto.FacilityMapSummaryDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("FacilityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityList");
                });

            modelBuilder.Entity("FMS.Domain.Entities.BudgetCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid?>("EnvironmentalInterestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalInterestId");

                    b.ToTable("BudgetCodes");
                });

            modelBuilder.Entity("FMS.Domain.Entities.Cabinet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CabinetNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstFileLabel")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("FMS.Domain.Entities.CabinetFile", b =>
                {
                    b.Property<Guid>("CabinetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CabinetId", "FileId");

                    b.HasIndex("FileId");

                    b.ToTable("CabinetFileJoin");
                });

            modelBuilder.Entity("FMS.Domain.Entities.ComplianceOfficer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("ComplianceOfficers");
                });

            modelBuilder.Entity("FMS.Domain.Entities.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 131,
                            Name = "Appling"
                        },
                        new
                        {
                            Id = 122,
                            Name = "Atkinson"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Baker"
                        },
                        new
                        {
                            Id = 213,
                            Name = "Baldwin"
                        },
                        new
                        {
                            Id = 179,
                            Name = "Banks"
                        },
                        new
                        {
                            Id = 217,
                            Name = "Barrow"
                        },
                        new
                        {
                            Id = 249,
                            Name = "Bartow"
                        },
                        new
                        {
                            Id = 211,
                            Name = "Ben Hill"
                        },
                        new
                        {
                            Id = 194,
                            Name = "Berrien"
                        },
                        new
                        {
                            Id = 259,
                            Name = "Bibb"
                        },
                        new
                        {
                            Id = 145,
                            Name = "Bleckley"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Brantley"
                        },
                        new
                        {
                            Id = 158,
                            Name = "Brooks"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Bryan"
                        },
                        new
                        {
                            Id = 159,
                            Name = "Bulloch"
                        },
                        new
                        {
                            Id = 203,
                            Name = "Burke"
                        },
                        new
                        {
                            Id = 188,
                            Name = "Butts"
                        },
                        new
                        {
                            Id = 112,
                            Name = "Calhoun"
                        },
                        new
                        {
                            Id = 169,
                            Name = "Camden"
                        },
                        new
                        {
                            Id = 113,
                            Name = "Candler"
                        },
                        new
                        {
                            Id = 241,
                            Name = "Carroll"
                        },
                        new
                        {
                            Id = 225,
                            Name = "Catoosa"
                        },
                        new
                        {
                            Id = 114,
                            Name = "Charlton"
                        },
                        new
                        {
                            Id = 242,
                            Name = "Chatham"
                        },
                        new
                        {
                            Id = 137,
                            Name = "Chattahoochee"
                        },
                        new
                        {
                            Id = 174,
                            Name = "Chattooga"
                        },
                        new
                        {
                            Id = 243,
                            Name = "Cherokee"
                        },
                        new
                        {
                            Id = 252,
                            Name = "Clarke"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Clay"
                        },
                        new
                        {
                            Id = 204,
                            Name = "Clayton"
                        },
                        new
                        {
                            Id = 178,
                            Name = "Clinch"
                        },
                        new
                        {
                            Id = 245,
                            Name = "Cobb"
                        },
                        new
                        {
                            Id = 146,
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 227,
                            Name = "Colquitt"
                        },
                        new
                        {
                            Id = 232,
                            Name = "Columbia"
                        },
                        new
                        {
                            Id = 212,
                            Name = "Cook"
                        },
                        new
                        {
                            Id = 250,
                            Name = "Coweta"
                        },
                        new
                        {
                            Id = 115,
                            Name = "Crawford"
                        },
                        new
                        {
                            Id = 220,
                            Name = "Crisp"
                        },
                        new
                        {
                            Id = 170,
                            Name = "Dade"
                        },
                        new
                        {
                            Id = 180,
                            Name = "Dawson"
                        },
                        new
                        {
                            Id = 244,
                            Name = "Decatur"
                        },
                        new
                        {
                            Id = 218,
                            Name = "DeKalb"
                        },
                        new
                        {
                            Id = 175,
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 189,
                            Name = "Dooly"
                        },
                        new
                        {
                            Id = 257,
                            Name = "Dougherty"
                        },
                        new
                        {
                            Id = 253,
                            Name = "Douglas"
                        },
                        new
                        {
                            Id = 195,
                            Name = "Early"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Echols"
                        },
                        new
                        {
                            Id = 123,
                            Name = "Effingham"
                        },
                        new
                        {
                            Id = 200,
                            Name = "Elbert"
                        },
                        new
                        {
                            Id = 198,
                            Name = "Emanuel"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Evans"
                        },
                        new
                        {
                            Id = 176,
                            Name = "Fannin"
                        },
                        new
                        {
                            Id = 235,
                            Name = "Fayette"
                        },
                        new
                        {
                            Id = 246,
                            Name = "Floyd"
                        },
                        new
                        {
                            Id = 238,
                            Name = "Forsyth"
                        },
                        new
                        {
                            Id = 201,
                            Name = "Franklin"
                        },
                        new
                        {
                            Id = 261,
                            Name = "Fulton"
                        },
                        new
                        {
                            Id = 165,
                            Name = "Gilmer"
                        },
                        new
                        {
                            Id = 124,
                            Name = "Glascock"
                        },
                        new
                        {
                            Id = 216,
                            Name = "Glynn"
                        },
                        new
                        {
                            Id = 230,
                            Name = "Gordon"
                        },
                        new
                        {
                            Id = 208,
                            Name = "Grady"
                        },
                        new
                        {
                            Id = 171,
                            Name = "Greene"
                        },
                        new
                        {
                            Id = 226,
                            Name = "Gwinnett"
                        },
                        new
                        {
                            Id = 214,
                            Name = "Habersham"
                        },
                        new
                        {
                            Id = 256,
                            Name = "Hall"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Hancock"
                        },
                        new
                        {
                            Id = 209,
                            Name = "Haralson"
                        },
                        new
                        {
                            Id = 138,
                            Name = "Harris"
                        },
                        new
                        {
                            Id = 190,
                            Name = "Hart"
                        },
                        new
                        {
                            Id = 152,
                            Name = "Heard"
                        },
                        new
                        {
                            Id = 248,
                            Name = "Henry"
                        },
                        new
                        {
                            Id = 239,
                            Name = "Houston"
                        },
                        new
                        {
                            Id = 139,
                            Name = "Irwin"
                        },
                        new
                        {
                            Id = 222,
                            Name = "Jackson"
                        },
                        new
                        {
                            Id = 147,
                            Name = "Jasper"
                        },
                        new
                        {
                            Id = 160,
                            Name = "Jeff Davis"
                        },
                        new
                        {
                            Id = 199,
                            Name = "Jefferson"
                        },
                        new
                        {
                            Id = 153,
                            Name = "Jenkins"
                        },
                        new
                        {
                            Id = 140,
                            Name = "Johnson"
                        },
                        new
                        {
                            Id = 161,
                            Name = "Jones"
                        },
                        new
                        {
                            Id = 181,
                            Name = "Lamar"
                        },
                        new
                        {
                            Id = 141,
                            Name = "Lanier"
                        },
                        new
                        {
                            Id = 223,
                            Name = "Laurens"
                        },
                        new
                        {
                            Id = 172,
                            Name = "Lee"
                        },
                        new
                        {
                            Id = 148,
                            Name = "Liberty"
                        },
                        new
                        {
                            Id = 125,
                            Name = "Lincoln"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Long"
                        },
                        new
                        {
                            Id = 254,
                            Name = "Lowndes"
                        },
                        new
                        {
                            Id = 192,
                            Name = "Lumpkin"
                        },
                        new
                        {
                            Id = 182,
                            Name = "Macon"
                        },
                        new
                        {
                            Id = 166,
                            Name = "Madison"
                        },
                        new
                        {
                            Id = 133,
                            Name = "Marion"
                        },
                        new
                        {
                            Id = 210,
                            Name = "McDuffie"
                        },
                        new
                        {
                            Id = 126,
                            Name = "McIntosh"
                        },
                        new
                        {
                            Id = 196,
                            Name = "Meriwether"
                        },
                        new
                        {
                            Id = 154,
                            Name = "Miller"
                        },
                        new
                        {
                            Id = 215,
                            Name = "Mitchell"
                        },
                        new
                        {
                            Id = 184,
                            Name = "Monroe"
                        },
                        new
                        {
                            Id = 134,
                            Name = "Montgomery"
                        },
                        new
                        {
                            Id = 197,
                            Name = "Morgan"
                        },
                        new
                        {
                            Id = 205,
                            Name = "Murray"
                        },
                        new
                        {
                            Id = 258,
                            Name = "Muscogee"
                        },
                        new
                        {
                            Id = 231,
                            Name = "Newton"
                        },
                        new
                        {
                            Id = 191,
                            Name = "Oconee"
                        },
                        new
                        {
                            Id = 127,
                            Name = "Oglethorpe"
                        },
                        new
                        {
                            Id = 219,
                            Name = "Paulding"
                        },
                        new
                        {
                            Id = 221,
                            Name = "Peach"
                        },
                        new
                        {
                            Id = 185,
                            Name = "Pickens"
                        },
                        new
                        {
                            Id = 116,
                            Name = "Pierce"
                        },
                        new
                        {
                            Id = 149,
                            Name = "Pike"
                        },
                        new
                        {
                            Id = 233,
                            Name = "Polk"
                        },
                        new
                        {
                            Id = 155,
                            Name = "Pulaski"
                        },
                        new
                        {
                            Id = 183,
                            Name = "Putnam"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Quitman"
                        },
                        new
                        {
                            Id = 167,
                            Name = "Rabun"
                        },
                        new
                        {
                            Id = 156,
                            Name = "Randolph"
                        },
                        new
                        {
                            Id = 260,
                            Name = "Richmond"
                        },
                        new
                        {
                            Id = 251,
                            Name = "Rockdale"
                        },
                        new
                        {
                            Id = 135,
                            Name = "Schley"
                        },
                        new
                        {
                            Id = 157,
                            Name = "Screven"
                        },
                        new
                        {
                            Id = 150,
                            Name = "Seminole"
                        },
                        new
                        {
                            Id = 240,
                            Name = "Spalding"
                        },
                        new
                        {
                            Id = 229,
                            Name = "Stephens"
                        },
                        new
                        {
                            Id = 117,
                            Name = "Stewart"
                        },
                        new
                        {
                            Id = 236,
                            Name = "Sumter"
                        },
                        new
                        {
                            Id = 128,
                            Name = "Talbot"
                        },
                        new
                        {
                            Id = 118,
                            Name = "Taliaferro"
                        },
                        new
                        {
                            Id = 136,
                            Name = "Tattnall"
                        },
                        new
                        {
                            Id = 142,
                            Name = "Taylor"
                        },
                        new
                        {
                            Id = 164,
                            Name = "Telfair"
                        },
                        new
                        {
                            Id = 173,
                            Name = "Terrell"
                        },
                        new
                        {
                            Id = 234,
                            Name = "Thomas"
                        },
                        new
                        {
                            Id = 237,
                            Name = "Tift"
                        },
                        new
                        {
                            Id = 151,
                            Name = "Toombs"
                        },
                        new
                        {
                            Id = 129,
                            Name = "Towns"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Treutlen"
                        },
                        new
                        {
                            Id = 247,
                            Name = "Troup"
                        },
                        new
                        {
                            Id = 186,
                            Name = "Turner"
                        },
                        new
                        {
                            Id = 130,
                            Name = "Twiggs"
                        },
                        new
                        {
                            Id = 168,
                            Name = "Union"
                        },
                        new
                        {
                            Id = 202,
                            Name = "Upson"
                        },
                        new
                        {
                            Id = 224,
                            Name = "Walker"
                        },
                        new
                        {
                            Id = 228,
                            Name = "Walton"
                        },
                        new
                        {
                            Id = 177,
                            Name = "Ware"
                        },
                        new
                        {
                            Id = 162,
                            Name = "Warren"
                        },
                        new
                        {
                            Id = 206,
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 143,
                            Name = "Wayne"
                        },
                        new
                        {
                            Id = 120,
                            Name = "Webster"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Wheeler"
                        },
                        new
                        {
                            Id = 193,
                            Name = "White"
                        },
                        new
                        {
                            Id = 255,
                            Name = "Whitfield"
                        },
                        new
                        {
                            Id = 144,
                            Name = "Wilcox"
                        },
                        new
                        {
                            Id = 163,
                            Name = "Wilkes"
                        },
                        new
                        {
                            Id = 207,
                            Name = "Wilkinson"
                        },
                        new
                        {
                            Id = 187,
                            Name = "Worth"
                        },
                        new
                        {
                            Id = 99,
                            Name = "OUT OF STATE"
                        });
                });

            modelBuilder.Entity("FMS.Domain.Entities.EnvironmentalInterest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentalInterests");
                });

            modelBuilder.Entity("FMS.Domain.Entities.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("BudgetCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<Guid?>("ComplianceOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<Guid?>("EnvironmentalInterestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FacilityStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FacilityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8, 6)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationalUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("BudgetCodeId");

                    b.HasIndex("ComplianceOfficerId");

                    b.HasIndex("CountyId");

                    b.HasIndex("EnvironmentalInterestId");

                    b.HasIndex("FacilityStatusId");

                    b.HasIndex("FacilityTypeId");

                    b.HasIndex("FileId");

                    b.HasIndex("OrganizationalUnitId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("FMS.Domain.Entities.FacilityStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EnvironmentalInterestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalInterestId");

                    b.ToTable("FacilityStatuses");
                });

            modelBuilder.Entity("FMS.Domain.Entities.FacilityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes");
                });

            modelBuilder.Entity("FMS.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("FileLabel")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("Id");

                    b.HasIndex("FileLabel")
                        .IsUnique()
                        .HasFilter("[FileLabel] IS NOT NULL");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("FMS.Domain.Entities.OrganizationalUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationalUnits");
                });

            modelBuilder.Entity("FMS.Domain.Entities.RetentionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsignmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RetentionSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelfNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("RetentionRecords");
                });

            modelBuilder.Entity("FMS.Domain.Entities.Users.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("FMS.Domain.Entities.BudgetCode", b =>
                {
                    b.HasOne("FMS.Domain.Entities.EnvironmentalInterest", "EnvironmentalInterest")
                        .WithMany("BudgetCodes")
                        .HasForeignKey("EnvironmentalInterestId");
                });

            modelBuilder.Entity("FMS.Domain.Entities.CabinetFile", b =>
                {
                    b.HasOne("FMS.Domain.Entities.Cabinet", "Cabinet")
                        .WithMany("CabinetFiles")
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMS.Domain.Entities.File", "File")
                        .WithMany("CabinetFiles")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FMS.Domain.Entities.ComplianceOfficer", b =>
                {
                    b.HasOne("FMS.Domain.Entities.OrganizationalUnit", "Unit")
                        .WithMany("ComplianceOfficers")
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("FMS.Domain.Entities.Facility", b =>
                {
                    b.HasOne("FMS.Domain.Entities.BudgetCode", "BudgetCode")
                        .WithMany()
                        .HasForeignKey("BudgetCodeId");

                    b.HasOne("FMS.Domain.Entities.ComplianceOfficer", "ComplianceOfficer")
                        .WithMany()
                        .HasForeignKey("ComplianceOfficerId");

                    b.HasOne("FMS.Domain.Entities.County", "County")
                        .WithMany()
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMS.Domain.Entities.EnvironmentalInterest", "EnvironmentalInterest")
                        .WithMany()
                        .HasForeignKey("EnvironmentalInterestId");

                    b.HasOne("FMS.Domain.Entities.FacilityStatus", "FacilityStatus")
                        .WithMany()
                        .HasForeignKey("FacilityStatusId");

                    b.HasOne("FMS.Domain.Entities.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeId");

                    b.HasOne("FMS.Domain.Entities.File", "File")
                        .WithMany("Facilities")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMS.Domain.Entities.OrganizationalUnit", "OrganizationalUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationalUnitId");
                });

            modelBuilder.Entity("FMS.Domain.Entities.FacilityStatus", b =>
                {
                    b.HasOne("FMS.Domain.Entities.EnvironmentalInterest", "EnvironmentalInterest")
                        .WithMany()
                        .HasForeignKey("EnvironmentalInterestId");
                });

            modelBuilder.Entity("FMS.Domain.Entities.RetentionRecord", b =>
                {
                    b.HasOne("FMS.Domain.Entities.Facility", "Facility")
                        .WithMany("RetentionRecords")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("FMS.Domain.Entities.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("FMS.Domain.Entities.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMS.Domain.Entities.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("FMS.Domain.Entities.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
