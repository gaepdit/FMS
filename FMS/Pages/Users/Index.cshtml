@page
@using FMS.Domain.Entities.Users
@model FMS.Pages.Users.IndexModel
@{
    ViewData["Title"] = "User Search";
}

@section Scripts {
    <script src="~/js/formSearch.js"></script>
}

    <h1>FMS @ViewData["Title"]</h1>

    <div class="container bg-light py-3">
        <form method="get" asp-fragment="SearchResults">
            <div class="row">
                <div class="col-md mb-3">
                    <div class="form-floating">
                        <input asp-for="Name" class="form-control" aria-describedby="nameHelpBlock"/>
                        <small id="nameHelpBlock" class="form-text text-muted">First or last name</small>
                        <label asp-for="Name"></label>
                    </div>
                </div>
                <div class="col-md mb-3">
                    <div class="form-floating">
                        <input asp-for="Email" class="form-control"/>
                        <label asp-for="Email"></label>
                    </div>
                </div>
                <div class="col-md mb-3">
                    <div class="form-floating">
                        <select asp-for="Role" asp-items="Model.RoleItems" class="form-select">
                            <option value="">(any)</option>
                        </select>
                        <label asp-for="Role"></label>
                    </div>
                </div>
            </div>
            <input type="hidden" name="handler" value="search"/>
            <button id="SearchButton" type="submit" class="btn btn-primary col-sm-3 me-2">Search</button>
            <a asp-page="./Index" class="btn btn-outline-secondary col-sm-3 col-md-2">Clear Form</a>
        </form>
    </div>

    @if (Model.ShowResults)
{
    <a id="SearchResults"></a>

    @if (Model.SearchResults is { Count: > 0 })
    {
        <table class="table table-borderless" aria-label="User information">
            <thead class="thead-light">
                <tr>
                    <th scope="col">@Html.DisplayNameFor(m => m.Name)</th>
                    <th scope="col">@Html.DisplayNameFor(m => m.Email)</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.SearchResults)
                {
                    <tr>
                        <td>
                            @if (item.Email.Equals(User.Identity.Name, StringComparison.InvariantCultureIgnoreCase))
                            {
                                <span class="badge badge-primary">YOU</span>
                            }
                            @Html.DisplayFor(m => item.DisplayName)
                        </td>
                        <td>@Html.DisplayFor(m => item.Email)</td>
                        <td class="text-center">
                            <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">View</a>
                            @if (User.IsInRole(UserRoles.UserMaintenance))
                            {
                                <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Edit Roles</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="container mt-2">
            <p class="lead text-info">No search results found.</p>
        </div>
    }
}